" -------------------------------------------------------------
"  Plugins via vim-plug
" -------------------------------------------------------------
" Specify a directory for plugins
call plug#begin('~/.vim/pluginz')

Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-fugitive'
Plug 'editorconfig/editorconfig-vim'
Plug 'altercation/vim-colors-solarized'
Plug 'arcticicestudio/nord-vim'
Plug 'morhetz/gruvbox'
Plug 'machakann/vim-highlightedyank'

" Initialize plugin system
call plug#end()

" -------------------------------------------------------------
"  General
" -------------------------------------------------------------
" Forget being compatible with good ol' vi
set nocompatible

" At least let yourself know what mode you're in
set showmode

" Sets how many lines of history VIM has to remember
set history=700

" Enable filetype plugin
filetype plugin on
filetype indent on

" Set to auto read when a file is changed from the outside
set autoread

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = ","
let g:mapleader = ","

" Fast saving
nmap <leader>w :w!<cr>

" Fast editing of the .vimrc
map <leader>e :e! ~/.vimrc<cr>

" When .vimrc is edited, reload it
" We need to refer to ~/.vimrc explicitly since my $MYVIMRC
" points to ~/.config/nvim/init.vim which already sources
" ~/.vimrc
autocmd! bufwritepost ~/.vimrc source $MYVIMRC

" No sound on errors
set noeb vb t_vb=
set noerrorbells
set novisualbell

" I like 4 stops
set tabstop=4

" I like 4 spaces for indenting
set shiftwidth=4

" spaced intead of tabs
set expandtab

" always set auto indenting on
set autoindent

" Line numbers
set number          " turn on line numbers
set relativenumber  " and make them relative
set numberwidth=3
nmap <leader>n :set number!<CR>

" -------------------------------------------------------------
"  UI
" -------------------------------------------------------------
" Set True Colour support
set termguicolors

" Syntax highlighting please
syntax enable

" always show current position
set ruler

"The commandbar height
set cmdheight=2

"Change buffer - without saving
set hid

" Set backspace config
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

"Ignore case when searching
set ignorecase
set smartcase

set hlsearch "Highlight search things

set incsearch "Make search act like search in modern browsers

set showmatch "Show matching bracets when text indicator is over them
set mat=2 "How many tenths of a second to blink

set encoding=utf-8

" -------------------------------------------------------------
"  Theme
" -------------------------------------------------------------
 colorscheme gruvbox
 set background=dark

" -------------------------------------------------------------
"  Airline
" -------------------------------------------------------------
set laststatus=2
let g:airline_powerline_fonts=1

let g:airline_enable_branch=1
let g:airline#extensions#tabline#enabled=1

" -------------------------------------------------------------
"  Files, backups and undo
" -------------------------------------------------------------
" turn backup off, since most stuff is in SVN, Git anyway...
set nobackup
set nowb
set noswapfile

" -------------------------------------------------------------
"  Moving around, tabs and buffers
" -------------------------------------------------------------
" Tabs
map <leader>tn :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove

" User left/right cursor keys for something usefull
map <right> :bn<cr>
map <left> :bp<cr>

" -------------------------------------------------------------
"  EditorConfig
" -------------------------------------------------------------
" EditorConfig core executable
let g:EditorConfig_exec_path = '/usr/loca/bin/editorconfig'
" work with Tim Pope's fugitive and don't
let g:EditorConfig_exclude_patterns = ['fugitive://.*']
" avoid loading EditorConfig for any remote files over ssh
let g:EditorConfig_exclude_patterns = ['scp://.*']
